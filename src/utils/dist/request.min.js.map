{"version":3,"sources":["request.js"],"names":["_axios","_interopRequireDefault","require","apiClient","axios","create","baseURL","process","env","REACT_APP_API_URL","headers","Content-Type","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"mappings":"2FACA,IAAAA,OAAAC,uBAAAC,QAAA,kFAEA,IAAMC,UAAYC,OAAAA,QAAMC,OAAO,CAC7BC,QAASC,QAAQC,IAAIC,mBAAqB,wBAC1CC,QAAS,CACPC,eAAgB,sBAGpBR,UAAUS,aAAaC,QAAQC,IAC7B,SAACC,GAVH,IAAAC,EAAAC,aAAAC,QAAA,SAMI,OAHEf,IACJG,EAASC,QAATD,cAAAA,UAAAA,OAA0CU,IAExCD,GAHJ,SAAAI,GAAA,OAAAC,QAAAC,OAAAF,kBAQkBF","file":"request.min.js","sourcesContent":["// src/utils/request.js\r\nimport axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:1512\", \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); \r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default apiClient;\r\n"]}